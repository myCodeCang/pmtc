<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.user.dao.UserChargeLogDao">
    
	<sql id="userChargeColumns">
		a.id AS "id",
		a.user_name AS "userName",
		a.recordcode AS "recordcode",
		a.change_money AS "changeMoney",
		a.before_money AS "beforeMoney",
		a.after_money AS "afterMoney",
		a.change_from AS "changeFrom",
		a.commt AS "commt",
		a.status AS "status",
		a.ischeck AS "ischeck",
		a.change_type AS "changeType",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="userChargeJoins">
	</sql>
    
	<select id="get" resultType="UserChargeLog">
		SELECT 
			<include refid="userChargeColumns"/>
		FROM user_charge_log a
		<include refid="userChargeJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="UserChargeLog">
		SELECT 
			<include refid="userChargeColumns"/>
		FROM user_charge_log a
		<include refid="userChargeJoins"/>
		<where>

			<if test="userName != null and userName != ''">
				AND a.user_name = #{userName}
			</if>
			<if test="changeType != null and changeType != ''">
				AND a.change_type = #{changeType}
			</if>
			<if test="createDateBegin != null and createDateBegin != null ">
				AND a.create_date &gt;= #{createDateBegin}
			</if>
			<if test="createDateEnd != null and createDateEnd != null ">
				AND a.create_date &lt;= #{createDateEnd}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<when test="orderBy !=null and orderBy != ''">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
		<if test="topLimit != null and topLimit != '' ">
			limit 0,#{topLimit}
		</if>
	</select>

	<select id="getByRecordCode" resultType="UserChargeLog">
		SELECT
		<include refid="userChargeColumns"/>
		FROM user_charge_log a
		<include refid="userChargeJoins"/>
		<where>
			a.recordcode = #{recordCode}
		</where>
		for update
	</select>
	
	<insert id="insert">
		INSERT INTO user_charge_log(
			id,
			user_name,
			recordcode,
			change_money,
			before_money,
			after_money,
			change_from,
			commt,
			status,
			ischeck,
			change_type,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{userName},
			#{recordcode},
			#{changeMoney},
			#{beforeMoney},
			#{afterMoney},
			#{changeFrom},
			#{commt},
			#{status},
			#{ischeck},
			#{changeType},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	

	
</mapper>